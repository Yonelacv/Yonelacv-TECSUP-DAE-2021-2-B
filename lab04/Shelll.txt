SHELL
===========================
$ python manage.py shell
Python 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" fation.
(InteractiveConsole)
>>> from recetas.models import Autor, Receta, Come
>>> a = Autor(nombre='Javier Pérez', email='eperez
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenvages\django\db\models\base.py", line 503, in __ini
    raise TypeError("%s() got an unexpected keywor'" % (cls.__name__, kwarg))
TypeError: Autor() got an unexpected keyword argum
>>> a = Autor(nombre='Javier Pérez',email='eperez@
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenvages\django\db\models\base.py", line 503, in __ini
    raise TypeError("%s() got an unexpected keywor'" % (cls.__name__, kwarg))
TypeError: Autor() got an unexpected keyword argum
>>> a = Autor(nombre='Javier Pérez',email='eperez@
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenvages\django\db\models\base.py", line 503, in __ini
    raise TypeError("%s() got an unexpected keywor'" % (cls.__name__, kwarg))
TypeError: Autor() got an unexpected keyword argum
>>> a = Autor(nombre='Javier Pérez',email='eperez@
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenvages\django\db\models\base.py", line 503, in __ini
    raise TypeError("%s() got an unexpected keywor'" % (cls.__name__, kwarg))
TypeError: Autor() got an unexpected keyword argum
>>> a = Autor(nombre='Javier Pérez',email='eperez@
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\base.py", line 503, in __init__
    raise TypeError("%s() got an unexpected keyworname__, kwarg))
TypeError: Autor() got an unexpected keyword argum
>>> a = Autor(nombre='Javier Pérez',emal='eperez@m
>>> a.save()
>>> Autor.objects.all()
<QuerySet [<Autor: Javier Pérez>]>
>>> primer = Autor.objects.get(pk=1)
>>> r1 = Receta.objects.create(titulo='Huevo fritol, aceite', preparacion='Calentar la sarten y bla 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*arg
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\query.py", line 451, in create
    obj = self.model(**kwargs)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\base.py", line 503, in __init__
    raise TypeError("%s() got an unexpected keyworname__, kwarg))
TypeError: Receta() got an unexpected keyword argu
>>> r1 = Receta.objects.create(titulo='Huevo fritol, aceite', preparacion='Calentar la sarten y bla 
    r1 = Receta.objects.create(titulo='Huevo fritol, aceite', preaparacion='Calentar la sarten y bla
>>> r1 = Receta.objects.create(titulo='Huevo fritol, aceite', preaparacion='Calentar la sarten y bla
Traceback (most recent call last):
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\backends\mysql\base.py", line 73, in execute
    return self.cursor.execute(query, args)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\connections.py", line 259, in query
    _mysql.connection.query(self, query)
MySQLdb._exceptions.IntegrityError: (1062, "Duplicr key 'titulo'")

The above exception was the direct cause of the fo

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*arg
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\query.py", line 453, in create
    obj.save(force_insert=True, using=self.db)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\base.py", line 726, in save
    self.save_base(using=using, force_insert=force
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\base.py", line 763, in save_base
    updated = self._save_table(
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\base.py", line 868, in _save_table
    results = self._do_insert(cls._base_manager, uelds, raw)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\base.py", line 906, in _do_insert
    return manager._insert(
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*arg
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\query.py", line 1270, in _insert
    return query.get_compiler(using=using).execute
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\models\sql\compiler.py", line 1416, in execute_
    cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\backends\utils.py", line 98, in execute
    return super().execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\b\backends\utils.py", line 66, in execute
db\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, paramsl File "C:\Desarrollo Empresarial\djangoApp\myvenvf._execute)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\ File "C:\Desarrollo Empresarial\djangoApp\myvenvdb\backends\utils.py", line 75, in _execute_with_w
    return executor(sql, params, many, context)
    return super().execute(sql, params)
    return super().execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvline 66, in execute
    return self._execute_with_wrappers(sql, params
  File "C:\Desarrollo Empresarial\djangoApp\myvenvline 75, in _execute_with_wrapial\djangoApp\myvenv
pers
    return executor(sql, params, many, context)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv    return super().execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\utils.py", esarrollo Empresarial\djangoApp\myvenvline 66, in execute
    return self._execute_with_wrappers(sql, params  File "C:\Desarrollo Empresarial\djangoApp\myvenv\utils.py", _execute
line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv    return super().execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvngo\dbne 66, in execute
\backends\utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params=self.ne 75, in _execute_with_wrappers
_execute)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvngo\dbne 84, in _execute
\backends\utils.py", line 75, in _execute_with_wra
    return executor(sql, params, many, context)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvges\django\db\backends\utils.py", line 66, in exec
    return self._execute_with_wrappers(sql, paramsxecutor=self._execute)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvges\django\db\backends\utils.py", line 75, in _exeers
    return executor(sql, params, many, context)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvges\django\db\backends\utils.py", line 84, in _exe
    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenvn __exit__
    raise dj_exc_value.with_traceback(traceback) f
  File "C:\Desarrollo Empresarial\djangoApp\myvenvine 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\site-packages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\mysql\base.py", line 73, in eute
    return self.cursor.execute(query, args)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\connections.py", line 259, in query     
    _mysql.connection.query(self, query)
django.db.utils.IntegrityError: (1062, "Duplicate entry 'vo frito' for key 'titulo'")
>>> Receta.objets.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Receta' has no attribute 'obs'
>>> Receta.objects.all()
<QuerySet [<Receta: Huevo frito>]>
>>> c1 = Comentario.objects.create(receta=r1, texto='Un cico para el desayuno')
>>> Comentario.objects.all()
<QuerySet [<Comentario: Un clásico para el desayuno>]>   
>>> r1 = Receta.objects.create(titulo='Agua Hervida', ingientes='agua', preaparacion='Poner la tetera en el fogon'utor=primer)
>>> r2 = Receta.objects.create(titulo='Agua Hervida', ingientes='agua', preaparacion='Poner la tetera en el fogon'utor=primer)
Traceback (most recent call last):
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\utils.py", line 84, in _execu
    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\mysql\base.py", line 73, in eute
    return self.cursor.execute(query, args)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\connections.py", line 259, in query     
    _mysql.connection.query(self, query)
MySQLdb._exceptions.IntegrityError: (1062, "Duplicate ent
'Agua Hervida' for key 'titulo'")

The above exception was the direct cause of the followingception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\manager.py", line 85, in manageethod
    return getattr(self.get_queryset(), name)(*args, **kws)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\query.py", line 453, in create 
    obj.save(force_insert=True, using=self.db)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\base.py", line 726, in save    
    self.save_base(using=using, force_insert=force_insert
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\base.py", line 763, in save_bas
    updated = self._save_table(
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\base.py", line 868, in _save_ta
    results = self._do_insert(cls._base_manager, using, fds, returning_fields, raw)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\base.py", line 906, in _do_inse
    return manager._insert(
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\manager.py", line 85, in manageethod
    return getattr(self.get_queryset(), name)(*args, **kws)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\query.py", line 1270, in _inser
    return query.get_compiler(using=using).execute_sql(rening_fields)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\sql\compiler.py", line 1416, inecute_sql
    cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\utils.py", line 98, in execut
    return super().execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\utils.py", line 66, in execut
    return self._execute_with_wrappers(sql, params, many=se, executor=self._execute)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\utils.py", line 75, in _execuwith_wrappers
    return executor(sql, params, many, context)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\utils.py", line 84, in _execu
    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exclue
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\utils.py", line 84, in _execu
    return self.cursor.execute(sql, params)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\backends\mysql\base.py", line 73, in eute
    return self.cursor.execute(query, args)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\MySQLdb\connections.py", line 259, in query     
    _mysql.connection.query(self, query)
django.db.utils.IntegrityError: (1062, "Duplicate entry 'a Hervida' for key 'titulo'")
>>> Receta.objects.all()
<QuerySet [<Receta: Huevo frito>, <Receta: Agua Hervida>]
>>> Receta.objects.exclude(ingredientes__startswith= 'A')
<QuerySet [<Receta: Huevo frito>, <Receta: Agua Hervida>]
>>> Receta.objects.exclude(ingredientes__startswith= 'A')
<QuerySet [<Receta: Huevo frito>, <Receta: Agua Hervida>]
>>> Receta.objects.filter(preparacion__contains= 'tetera'
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\manager.py", line 85, in manageethod
    return getattr(self.get_queryset(), name)(*args, **kws)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\query.py", line 941, in filter 
    return self._filter_or_exclude(False, args, kwargs)  
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sipackages\django\db\models\query.py", line 961, in _filter_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\siine 96r_or_exclude_inplace
8, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\si", linause, _ = self._add_q(q_object, self.used_aliases)
e 1393, in add_q
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\siery.py", l\Desarrollo Empresarial\djangoApp\myvenv\lib\siine 968, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sil\query.py\Desarrollo Empresarial\djangoApp\myvenv\lib\si", line 1393, in add_q
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\siango\db\models\query.py", line 968, in _filter_or_exclude
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\siango\db\models\sql\query.py", line 1393, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\siango\db\models\sql\query.py", line 1412, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\siango\db\models\sql\query.py", line 1286, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\siango\db\models\sql\query.py", line 1112, in solve_lookup_
    _, field, _, lookup_parts = self.names_to_path(lookup
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\si    _, field, _, lookup_parts = self.names_to_path(lookup, self.gC:\Desarrollo Empresarial\djangoApp\myvenv\lib\siet_meta())
  File "C:\Desarrollo Empresarial\djangoApp\myvenv\lib\sies\djangore.exceptions.FieldError: Cannot resolve keyword field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'preparacion' into field. Choices are: autor, autor_id, comentario, id, ingredientes, preaparacion, tiempo_registro, titulo
>>> Receta.objects.filter(preaparacion__contains= 'tetera')        
<QuerySet [<Receta: Agua Hervida>]>
>>> Receta.objects.all().order_by('titulo')
<QuerySet [<Receta: Agua Hervida>, <Receta: Huevo frito>]>
>>> Receta.objects.all().order_by('titulo').reverse()
<QuerySet [<Receta: Huevo frito>, <Receta: Agua Hervida>]>
>>> Comentario.objects.filter(receta=r1)
<QuerySet []>
>>> Comentario.objects.filter(receta=r2)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'r2' is not defined
>>> Comentario.objects.filter(receta=r3)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'r3' is not defined
>>> Comentario.objects.filter(receta=r2)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'r2' is not defined
>>> Receta.objects.filter(titulo='Huevo frito').update(titulo='Huevito frito')
1
>>> Receta.objects.all()
<QuerySet [<Receta: Huevito frito>, <Receta: Agua Hervida>]>
>>> c2 = Comentario.objects.create(receta=r1, texto='Para pasar el 
hambre')
>>> Comentario.objects.filter.(receta=r1).count()
  File "<console>", line 1
    Comentario.objects.filter.(receta=r1).count()
                              ^
SyntaxError: invalid syntax
>>> c2 = Comentario.objects.create(receta=r1, texto='Para pasar el 

  File "<console>", line 1
    c2 = Comentario.objects.create(receta=r1, texto='Para pasar el 


^
SyntaxError: EOL while scanning string literal
>>> hambre')c2 = Comentario.objects.create(receta=r1, texto='Para pasar el
  File "<console>", line 1
    hambre')c2 = Comentario.objects.create(receta=r1, texto='Para pasar el
          ^
SyntaxError: invalid syntax
>>> Comentario.objects.filter.(receta=r1).count()  
  File "<console>", line 1
    Comentario.objects.filter.(receta=r1).count()
                              ^
SyntaxError: invalid syntax
>>> Comentario.objects.filter(receta=r1).count()  
1
>>> Comentario.objects.filter(receta=r2).count()  
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'r2' is not defined
>>> c3 = Comentario.objects.create(receta=r2, texto='Receta sin sentido')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'r2' is not defined
>>> Comentario.objects.filter(receta=r2)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'r2' is not defined
>>> c3.delete()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'c3' is not defined
>>> Comentario.objects.filter(receta=r2)          
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'r2' is not defined
>>> Receta.objects.get(titulo='Agua Hervida').autor.nombre
'Javier Pérez'
>>> Receta.objects.get(titulo='Agua Hervida').autor.email 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Autor' object has no attribute 'email'
>>> Receta.objects.get(titulo='Agua Hervida').autor.emal  
'eperez@mail.com'
>>>